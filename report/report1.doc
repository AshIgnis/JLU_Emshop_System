一、项目需求描述
1. 功能需求
（1）业务逻辑
实现电商系统的基本功能，包括用户注册/登录、商品浏览、购物车、下单、订单管理、支付等。
管理员可进行商品管理、用户管理、订单审核等后台操作。
其中，客户端和服务器都由java的netty实现，在建立起稳定的连接时，cpp通过调用数据库，利用cpp完成的函数，
向客户端反馈，客户也通过这种方式，将自己的数据写入客户端里
（2）UI描述
准备使用vue或qt进行前端构建，在基本业务功能完成后会详细了解这两者的优劣，
并结合我具体的实现进行多种ui的构建，目前大体准备构建5-7个ui界面
（3）通信等
客户端与服务器之间采用java进行构建，java中的netty实现为后期增添异步处理提供了基础
使得程序更加健壮
Java与C++通过JNI进行本地方法调用，java建立客户端和服务器并进行连接。
java中仅仅声明在数据交换中所需要的函数，并利用java自带的jni方法，
将需要实现的函数转化为.h文件格式，然后使用cpp语言，结合面向对象的思想，
力求可复用性地完成各种功能
最后生成.dll文件，使函数可以在java客户端与服务器通信时可以正常使用
数据库采用本地的MySQL，支持端口访问，并且支持多线程并发访问。

2. 性能需求
（1）多层结构
系统采用前端-后端-本地服务-数据库的多层架构，展开各层职责，便于维护和扩展。
其中通信由最为成熟的java方案构成，而java内部函数的实现，由cpp具体完成
在保证netty实现可能的异步通信的同时，包含了cpp内存小，运行速度快的优点
使得整个程序有序
并且使用mysql C++/connecter 让数据库与cpp文件更好的链接
（2）柔性讨论
cpp实现部分以面向对象标准实现，支持灵活的业务扩展，如增加新的业务模块、测试数据库是否可行等。
采用配置文件和模块化设计，结合了面向对象的思想，便于后续调整和升级。
（3）扩展能力
通过JNI接口，后端可灵活调用C++实现的高性能模块，便于后续集成更多本地服务。
前后端接口标准化，便于后期改造程序
cpp通过大量的类来封装，通过继承达到可复用性，以满足项目开发过程中可能出现的改进问题

二、相关技术讨论及解决方案
Netty通信：用于高性能网络通信，查阅官方文档和示例，结合实际业务需求进行二次开发。
JNI开发：Java与C++交互，参考官方JNI文档，结合网络上有关jni的开源项目借鉴以进行实践。
MySQL数据库：采用JDBC和C++ MySQL库。
多线程与并发：C++和Java均考虑线程安全，采用锁机制和线程池等方式，期望在初期就避免多线程和并发中存在的问题给i。
UI设计：初步选定vue或qt，期望在底层功能大致结束前，能对这两个前端方法有大概的了解
对于不熟悉的技术（如Netty高级用法、JNI复杂数据结构传递，前端语言的学习，java网络层面的知识），
计划通过查阅官方文档、社区教程和实际编码调试解决。

三、设计初步思考
采用分层架构，前端、后端、C++服务、数据库各自独立，接口清晰。
业务逻辑尽量在Java后端实现，函数接口实现部分全权由cpp负责，在保证网络连接的情况下，充分的利用了cpp的特性与优点。
数据库设计遵循规范，表结构清晰，便于扩展。
代码注重可读性和可维护性，添加适当的注释，便于后续开发。

四、项目难度与目标
目标难度
计划实现完整的电商业务流程，支持多用户并发、后台管理、JNI本地加速等功能。
难度定位为“中等偏上”，兼顾功能完整性和系统性能，并且涉及大量未曾接触过的知识。
原因：
项目涉及多语言（Java/C++）、前端、多层架构、网络通信、数据库、JNI等多项技术，具有一定挑战性。

项目具体进度可访问

2025.9.3
55240425 屈熙宸